mn.dose.Z10 <- mean(ToothGrowth$len[ToothGrowth$dose == 1.0])
mn.dose.Z10
mn.dose.Z20 <- mean(ToothGrowth$len[ToothGrowth$dose == 2.0])
mn.dose.Z20
# sd
sd.dose.all <- sd(ToothGrowth$len)
sd.dose.all
sd.dose.Z05 <- sd(ToothGrowth$len[ToothGrowth$dose == 0.5])
sd.dose.Z05
sd.dose.Z10 <- sd(ToothGrowth$len[ToothGrowth$dose == 1.0])
sd.dose.Z10
sd.dose.Z20 <- sd(ToothGrowth$len[ToothGrowth$dose == 2.0])
sd.dose.Z20
# n
n.dose.all <- length(ToothGrowth$len)
n.dose.all
n.dose.Z05 <- length(ToothGrowth$len[ToothGrowth$dose == 0.5])
n.dose.Z05
n.dose.Z10 <- length(ToothGrowth$len[ToothGrowth$dose == 1.0])
n.dose.Z10
n.dose.Z20 <- length(ToothGrowth$len[ToothGrowth$dose == 2.0])
n.dose.Z20
se.dose.all <- sqrt(sd(ToothGrowth$len)^2/(length(ToothGrowth$len)-1))
se.dose.all
se.dose.Z05 <- sqrt(sd(ToothGrowth$len[ToothGrowth$dose == 1.0])^2/(length(ToothGrowth$len[ToothGrowth$dose == 1.0])-1))
se.dose.Z05
se.dose.Z10 <- sqrt(sd(ToothGrowth$len[ToothGrowth$dose == 1.0])^2/(length(ToothGrowth$len[ToothGrowth$dose == 1.0])-1))
se.dose.Z10
se.dose.Z20 <- sqrt(sd(ToothGrowth$len[ToothGrowth$dose == 2.0])^2/(length(ToothGrowth$len[ToothGrowth$dose == 2.0])-1))
se.dose.Z20
# Confidence Intervals
CI.dose.all <- mean(ToothGrowth$len) + c(-1,1)*qt(0.975,(length(ToothGrowth$len)-1))*sqrt(sd(ToothGrowth$len)^2/(length(ToothGrowth$len)-1))
CI.dose.all
CI.dose.Z05 <-  mean(ToothGrowth$len[ToothGrowth$dose == 0.5]) + c(-1,1)*qt(0.975,(length(ToothGrowth$len[ToothGrowth$dose == 0.5])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$dose == 0.5])^2/(length(ToothGrowth$len[ToothGrowth$dose == 0.5])-1))
CI.dose.Z05
CI.dose.Z10 <- mean(ToothGrowth$len[ToothGrowth$dose == 1.0]) + c(-1,1)*qt(0.975,(length(ToothGrowth$len[ToothGrowth$dose == 1.0])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$dose == 1.0])^2/(length(ToothGrowth$len[ToothGrowth$dose == 1.0])-1))
CI.dose.Z10
CI.dose.Z20 <- mean(ToothGrowth$len[ToothGrowth$dose == 2.0]) + c(-1,1)*qt(0.975,(length(ToothGrowth$len[ToothGrowth$dose == 2.0])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$dose == 2.0])^2/(length(ToothGrowth$len[ToothGrowth$dose == 2.0])-1))
CI.dose.Z20
# means
mn.dose.all <- mean(ToothGrowth$len)
mn.dose.all
mn.dose.Z05 <- mean(ToothGrowth$len[ToothGrowth$dose == 0.5])
mn.dose.Z05
mn.dose.Z10 <- mean(ToothGrowth$len[ToothGrowth$dose == 1.0])
mn.dose.Z10
mn.dose.Z20 <- mean(ToothGrowth$len[ToothGrowth$dose == 2.0])
mn.dose.Z20
# sd
sd.dose.all <- sd(ToothGrowth$len)
sd.dose.all
sd.dose.Z05 <- sd(ToothGrowth$len[ToothGrowth$dose == 0.5])
sd.dose.Z05
sd.dose.Z10 <- sd(ToothGrowth$len[ToothGrowth$dose == 1.0])
sd.dose.Z10
sd.dose.Z20 <- sd(ToothGrowth$len[ToothGrowth$dose == 2.0])
sd.dose.Z20
# n
n.dose.all <- length(ToothGrowth$len)
n.dose.all
n.dose.Z05 <- length(ToothGrowth$len[ToothGrowth$dose == 0.5])
n.dose.Z05
n.dose.Z10 <- length(ToothGrowth$len[ToothGrowth$dose == 1.0])
n.dose.Z10
n.dose.Z20 <- length(ToothGrowth$len[ToothGrowth$dose == 2.0])
n.dose.Z20
se.dose.all <- sqrt(sd(ToothGrowth$len)^2/(length(ToothGrowth$len)-1))
se.dose.all
se.dose.Z05 <- sqrt(sd(ToothGrowth$len[ToothGrowth$dose == 0.5])^2/(length(ToothGrowth$len[ToothGrowth$dose == 0.5])-1))
se.dose.Z05
se.dose.Z10 <- sqrt(sd(ToothGrowth$len[ToothGrowth$dose == 1.0])^2/(length(ToothGrowth$len[ToothGrowth$dose == 1.0])-1))
se.dose.Z10
se.dose.Z20 <- sqrt(sd(ToothGrowth$len[ToothGrowth$dose == 2.0])^2/(length(ToothGrowth$len[ToothGrowth$dose == 2.0])-1))
se.dose.Z20
# Confidence Intervals
CI.supp.all <- mean(ToothGrowth$len) + c(-1,1)*qt(0.975,(length(ToothGrowth$len)-1))*sqrt(sd(ToothGrowth$len)^2/(length(ToothGrowth$len)-1))
CI.supp.all
CI.supp.VC <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"]) + c(-1,1)*qt(0.975,(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
CI.supp.VC
CI.supp.OJ <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"]) + c(-1,1)*qt(0.975,(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
CI.supp.OJ
# means
mn.supp.all <- mean(ToothGrowth$len)
mn.supp.all
mn.supp.VC <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"])
mn.supp.VC
mn.supp.OJ <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"])
mn.supp.OJ
# sd
sd.supp.all <- sd(ToothGrowth$len)
sd.supp.all
sd.supp.VC <- sd(ToothGrowth$len[ToothGrowth$supp == "VC"])
sd.supp.VC
sd.supp.OJ <- sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])
sd.supp.OJ
# n
n.supp.all <- length(ToothGrowth$len)
n.supp.all
n.supp.VC <- length(ToothGrowth$len[ToothGrowth$supp == "VC"])
n.supp.VC
n.supp.OJ <- length(ToothGrowth$len[ToothGrowth$supp == "OJ"])
n.supp.OJ
se.supp.all <- sqrt(sd(ToothGrowth$len)^2/(length(ToothGrowth$len)-1))
se.supp.all
se.supp.VC <- sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
se.supp.VC
se.supp.OJ <- sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
se.supp.OJ
CI.supp.VC.C95 <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"]) + c(-1,1)*qt(0.975,(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
CI.supp.VC.C95
CI.supp.OJ.C95 <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"]) + c(-1,1)*qt(0.975,(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
CI.supp.OJ.C95
CI.supp.VC.C90 <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"]) + c(-1,1)*qt(0.95,(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
CI.supp.VC.C90
CI.supp.OJ.C90 <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"]) + c(-1,1)*qt(0.95,(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
CI.supp.OJ.C90
CI.supp.VC.C95 <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"]) + c(-1,1)*qt(0.975,(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
CI.supp.VC.C95
CI.supp.OJ.C95 <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"]) + c(-1,1)*qt(0.975,(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
CI.supp.OJ.C95
CI.supp.VC.C90 <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"]) + c(-1,1)*qt(0.95,(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
CI.supp.VC.C90
CI.supp.OJ.C90 <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"]) + c(-1,1)*qt(0.95,(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
CI.supp.OJ.C90
CI.supp.VC.C80 <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"]) + c(-1,1)*qt(0.90,(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
CI.supp.VC.C80
CI.supp.OJ.C80 <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"]) + c(-1,1)*qt(0.90,(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
CI.supp.OJ.C80
CI.supp.VC.C95 <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"]) + c(-1,1)*qt(0.975,(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
CI.supp.VC.C95
CI.supp.OJ.C95 <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"]) + c(-1,1)*qt(0.975,(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
CI.supp.OJ.C95
CI.supp.VC.C90 <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"]) + c(-1,1)*qt(0.95,(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
CI.supp.VC.C90
CI.supp.OJ.C90 <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"]) + c(-1,1)*qt(0.95,(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
CI.supp.OJ.C90
CI.supp.VC.C85 <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"]) + c(-1,1)*qt(0.925,(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
CI.supp.VC.C85
CI.supp.OJ.C85 <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"]) + c(-1,1)*qt(0.925,(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
CI.supp.OJ.C85
CI.supp.VC.C80 <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"]) + c(-1,1)*qt(0.90,(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
CI.supp.VC.C80
CI.supp.OJ.C80 <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"]) + c(-1,1)*qt(0.90,(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
CI.supp.OJ.C80
CI.supp.VC.C85 <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"]) + c(-1,1)*qt(0.925,(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
CI.supp.VC.C85
CI.supp.OJ.C85 <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"]) + c(-1,1)*qt(0.925,(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
CI.supp.OJ.C85
CI.supp.VC.C80 <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"]) + c(-1,1)*qt(0.90,(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
CI.supp.VC.C80
CI.supp.OJ.C80 <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"]) + c(-1,1)*qt(0.90,(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
CI.supp.OJ.C80
CI.supp.VC.C82 <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"]) + c(-1,1)*qt(0.91,(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
CI.supp.VC.C82
CI.supp.OJ.C82 <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"]) + c(-1,1)*qt(0.91,(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
CI.supp.OJ.C82
CI.supp.VC.C83 <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"]) + c(-1,1)*qt(0.915,(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
CI.supp.VC.C83
CI.supp.OJ.C83 <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"]) + c(-1,1)*qt(0.915,(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
CI.supp.OJ.C83
CI.supp.VC.C80 <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"]) + c(-1,1)*qt(0.90,(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
CI.supp.VC.C80
CI.supp.OJ.C80 <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"]) + c(-1,1)*qt(0.90,(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
CI.supp.OJ.C80
CI.supp.VC.C82 <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"]) + c(-1,1)*qt(0.91,(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
CI.supp.VC.C82
CI.supp.OJ.C82 <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"]) + c(-1,1)*qt(0.91,(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
CI.supp.OJ.C82
CI.supp.VC.C81 <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"]) + c(-1,1)*qt(0.905,(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
CI.supp.VC.C81
CI.supp.OJ.C81 <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"]) + c(-1,1)*qt(0.905,(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
CI.supp.OJ.C81
CI.supp.VC.C95 <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"]) + c(-1,1)*qt(0.975,(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
CI.supp.VC.C95
CI.supp.OJ.C95 <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"]) + c(-1,1)*qt(0.975,(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
CI.supp.OJ.C95
CI.supp.VC.C90 <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"]) + c(-1,1)*qt(0.95,(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
CI.supp.VC.C90
CI.supp.OJ.C90 <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"]) + c(-1,1)*qt(0.95,(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
CI.supp.OJ.C90
CI.supp.VC.C85 <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"]) + c(-1,1)*qt(0.925,(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
CI.supp.VC.C85
CI.supp.OJ.C85 <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"]) + c(-1,1)*qt(0.925,(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
CI.supp.OJ.C85
CI.supp.VC.C80 <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"]) + c(-1,1)*qt(0.90,(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
CI.supp.VC.C80
CI.supp.OJ.C80 <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"]) + c(-1,1)*qt(0.90,(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
CI.supp.OJ.C80
CI.supp.VC.C82 <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"]) + c(-1,1)*qt(0.91,(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
CI.supp.VC.C82
CI.supp.OJ.C82 <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"]) + c(-1,1)*qt(0.91,(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
CI.supp.OJ.C82
CI.supp.VC.C81 <- mean(ToothGrowth$len[ToothGrowth$supp == "VC"]) + c(-1,1)*qt(0.905,(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "VC"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "VC"])-1))
CI.supp.VC.C81
CI.supp.OJ.C81 <- mean(ToothGrowth$len[ToothGrowth$supp == "OJ"]) + c(-1,1)*qt(0.905,(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))*sqrt(sd(ToothGrowth$len[ToothGrowth$supp == "OJ"])^2/(length(ToothGrowth$len[ToothGrowth$supp == "OJ"])-1))
CI.supp.OJ.C81
save.image("C:/Users/Warren/SkyDrive/Documents/Warren/Training/Data Science Certification - John Hopkins - 20150914/Statistical Inference 20150921/R Workspaces/R Workspace 20151025 Stat Infer Project B - ToothGrowth.RData")
rm(list = ls())
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
n = 40
n
lamda = 0.2
lamda
mn = 1 / lambda
lambda = 0.2
lambda
mn = 1 / lambda
mn
sd = 1 / lambda
sd
n.sample = 40
n.sample
n.simulation = 1000
n.simulation
n = 40
lambda = 0.2
mn = 1 / lambda
sd = 1 / lambda
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(rexp(n, lambda)))
hist(mns)
mean(mns)
sd(mns)
exp(0.2)
mns
head(mns)
sds(mns)
sds <- sd(mns)
n = 40
lambda = 0.2
mn = 1 / lambda
sd = 1 / lambda
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(rexp(n, lambda)))
hist(mns)
sds(mns)
n = 40
lambda = 0.2
mn = 1 / lambda
mn
sd = 1 / lambda
sd
mns = NULL
for (i in 1 : 1000) sim.mns = c(mns, mean(rexp(n, lambda)))
hist(sim.mns)
mns <- sd(sim.mns)
mns
sds <- sd(sim.mns)
sds
n = 40
lambda = 0.2
mn = 1 / lambda
mn
sd = 1 / lambda
sd
mns = NULL
for (i in 1 : 1000) sim.mns = c(sim.mns, mean(rexp(n, lambda)))
hist(sim.mns)
mns <- sd(sim.mns)
mns
sds <- sd(sim.mns)
sds
n = 40
lambda = 0.2
mn = 1 / lambda
mn
sd = 1 / lambda
sd
mns = NULL
for (i in 1 : 1000) sim.mns = c(sim.mns, mean(rexp(n, lambda)))
hist(sim.mns)
mns <- mean(sim.mns)
mns
sds <- sd(sim.mns)
sds
plot(x <- 0.1:10, y<- exp(x)
)
plot(x <- 0.1:8, y<- exp(x))
plot(x <- 0.1:10, y<- exp(x))
plot(x <- 0.1:9, y<- exp(x))
plot(x <- 0.1:9.0, y<- exp(x))
plot(x <- 0:9, y<- exp(x))
hist(sim.mns)
plot(x <- 0:9, y<- 0.2*exp(-0.2*x))
hist(sim.mns)
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
##
## description : This function creates a special "matrix" object that can cache
## its inverse
makeCacheMatrix <- function(x = matrix()) {
# solve(X) returns inverse
# some comments relate to conceptually translating this to their OO counterparts
# initialize
m <- NULL
# define 4 "properties" of this "object"
# here each "property" is a "function"
# - technically 2 "pairs" of getter / setter functions
#   to underlying data values "x" and "m", where
#     x is the matrix
#     m is the inverse matrix
set <- function(y)
{
x <<- y
m <<- NULL
}
get <- function() x
setInverse <- function(solve) m <<- solve
getInverse <- function() m
# return "object"
# here, a list is returned with reference to 4 "properties" of this "object"
list(set = set, get = get, setInverse = setInverse, getInverse = getInverse)
}
## Write a short comment describing this function
##
## description :
##    This function computes the inverse of the special "matrix"
##    returned by makeCacheMatrix above.
##
##    If the inverse has already been calculated (and the matrix has not changed),
##    then the cachesolve should retrieve the inverse from the cache.
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
# retrieves the cached inverse matrix if already computed, else NULL
m <- x$getInverse()
# if cached inverse matrix is found...
if(!is.null(m))
{
# cached inverse matrix found - return cached inverse matrix
message("getting cached data")
return(m)
}
# if cached inverse matrix is not found, retrieve the matrix of data
data <- x$get()
# compute inverse matrix
m <- solve(data, ...)
# save / cache inverse matrix
x$setInverse(m)
# return m, the result
# here, the inverse of the input Matrix
m
}
myMatrix <- matrix(1:16,4,4)
myMatrix
CacheSolve(myMatrix)
cacheSolve(myMatrix)
load("C:\Users\Warren\DSRProgrammingAssignment2\ProgrammingAssignment2\cacheMatrix.R")
load("C:\\Users\\Warren\\DSRProgrammingAssignment2\\ProgrammingAssignment2\\cacheMatrix.R")
load("C:\\Users\\Warren\\DSRProgrammingAssignment2\\ProgrammingAssignment2\\cacheMatrix.R")
load("C:\\Users\\Warren\\DSRProgrammingAssignment2\\ProgrammingAssignment2\\cacheMatrix.R")
load("TestCacheMatrix.R")
dir())
dir()
cd "rprog_data_ProgAssignment3-data"
cd rprog_data_ProgAssignment3-data
cd rprog_data_ProgAssignment3
load("TestCacheMatrix.R")
library("TestCacheMatrix.R")
source("TestCacheMatirx.R")
source(TestCacheMatirx.R)
ls
dir()
source("TestCacheMatrix.R")
cacheSolve(myMatrix)
cacheSolve(myMatrix)
m
x
View(x)
install.packages("RColorBrewer")
load(RColorBrewer)
load("RColorBrewer"")
load("RColorBrewer")
library("RColorBrewer")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
summary(BodyWeight)
?BodyWeight
? "lattice"
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
install.packages("ggplot2")
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies)qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + geom_smooth()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
install.packages("xlsx")
library("xlsx")
install.packages("rJava")
library("xlsx")
library("rJava")
install.packages("XLConnect")
library("XLConnect")
save.image("C:/Users/Warren/SkyDrive/Documents/Warren/Training/Data Science Certification - John Hopkins - 20150914/R Programming 20150921/R Studio Workspaces/R Studio Workspace 20151103.RData")
rm(list=ls())
setwd("C:\\Users\\Warren\\Documents\\GitHub\\DS_EDA_PeerAssessment2\\DS_EDA_PeerAssessment2")
NEI <- readRDS("..\\..\\Data\\exdata_data_NEI_data\\summarySCC_PM25.rds")
SCC <- readRDS("..\\..\\Data\\exdata_data_NEI_data\\Source_Classification_Code.rds")
unique(NEI$SCC)
unique(SCC$SCC)
length(unique(NEI$SCC))
length(unique(SCC$SCC))
NEISCC <- arrange(join(NEI$SCC, SCC$SCC, SCC))
library(dplyr)
NEISCC <- arrange(join(NEI$SCC, SCC$SCC, SCC))
install.packages("plyr")
library(dplyr)
library(plyr)
NEISCC <- arrange(join(NEI$SCC, SCC$SCC, SCC))
View(SCC)
View(SCC)
SCC$SCC <- as.character(SCC$SCC)
NEISCC <- arrange(join(NEI$SCC, SCC$SCC, SCC))
head(SCC$SCC)
SCC$SCC <- as.character(SCC$SCC)
head(SCC$SCC)
dim(SCC$SCC)
SCC$SCC <- as.character(SCC$SCC)
head(SCC$SCC)
dim(SCC$SCC)
length(SCC$SCC)
class(SCC$SCC)
class(NEI$SCC)
NEISCC <- join(NEI$SCC, SCC$SCC, SCC)
NEISCC <- join(unlist(NEI$SCC), unlist(SCC$SCC), SCC)
class(SCC$SCC)
class(NEI$SCC)
class(SCC)
class(NEI)
NEISCC <- arrange(join(NEI, SCC, SCC))
colnames(SCC$SCC) = "SCCID"
colnames(SCC)["SCC"] = "SCCID"
colnames(SCC)
myColnames <- colnames(SCC)
myColnames[1] <- "SCCID"
colnames(SCC) <- myColnames
# adjust ID field so it differs from the table name
myColnames <- colnames(SCC)
myColnames[1] <- "SCCID"
colnames(SCC) <- myColnames
# adjust ID field so it differs from the SCC table name
myColnames <- colnames(NEI)
myColnames[1] <- "SCCID"
colnames(NEI) <- myColnames
NEISCC <- arrange(join(NEI, SCC, SCCID))
NEISCC <- arrange(join(NEI, SCC, SCCID))
# adjust ID field so it differs from the table name
myColnames <- colnames(SCC)
myColnames[1] <- "id"
#myColnames[1] <- "SCCID"
colnames(SCC) <- myColnames
# adjust ID field so it differs from the SCC table name
myColnames <- colnames(NEI)
myColnames[1] <- "id"
#myColnames[1] <- "SCCID"
colnames(NEI) <- myColnames
NEISCC <- arrange(join(NEI, SCC, id))
# adjust ID field so it differs from the table name
myColnames <- colnames(SCC)
#myColnames[1] <- "id"
myColnames[1] <- "SCCID"
colnames(SCC) <- myColnames
# adjust ID field so it differs from the SCC table name
myColnames <- colnames(NEI)
#myColnames[1] <- "id"
myColnames[1] <- "SCCID"
colnames(NEI) <- myColnames
NEISCC <- merge.data.frame(NEI, SCC)
(NEI, SCC)
NEISCC <- merge(NEI, SCC)
NEISCC <- merge(NEI, SCC, by.x = "SCCID", by.y = "SCCID")
## This first line will likely take a few seconds. Be patient!
NEI <- readRDS("..\\..\\Data\\exdata_data_NEI_data\\summarySCC_PM25.rds")
SCC <- readRDS("..\\..\\Data\\exdata_data_NEI_data\\Source_Classification_Code.rds")
NEISCC <- merge(NEI, SCC, by.x = "SCCID", by.y = "SCCID", all=TRUE)
NEISCC <- merge(NEI, SCC, by.x = "SCC", by.y = "SCC", all=TRUE)
NEISCC = merge(NEI, SCC, by.x = "SCC", by.y = "SCC", all=TRUE)
View(NEISCC)
View(NEISCC)
View(NEISCC)
rm(NEISCC)
rm(NEISCC)
NEISCC = merge(x = NEI, y = SCC, by.x = "SCC", by.y = "SCC", x.all=TRUE)
